class Solution:
    def recoverTree(self, root: TreeNode):
        """
        :rtype: void Do not return anything, modify root in-place instead.
        """
        def find_and_swap(root: TreeNode):
            nonlocal x, y, pre
            
            if not root:
                return
            
            find_and_swap(root.left)
            if pre and pre.val > root.val:
                y = root
                if x is None:
                    x = pre
                else:
                    return
            
            pre = root
            find_and_swap(root.right)
            
        x = y = pre = None
        find_and_swap(root)
        x.val, y.val = y.val, x.val
