class Solution:
    def minMeetingRooms(self, intervals: List[List[int]]) -> int:
        # if there is any meetings, no
        if not intervals:
            return 0
        
        # yes, meetings
        intervals.sort(key = lambda x: x[0])
        free_rooms = []
        heapq.heappush(free_rooms, intervals[0][1])
        
        # compare coming meeting start time with meeting earliest end time in the heap 
        for i in intervals[1:]:
            if free_rooms[0] <= i[0]:
                heapq.heappop(free_rooms)
            
            # add new meeting's end time into the heap
            heapq.heappush(free_rooms, i[1])
            
        # output the length
        return len(free_rooms)
