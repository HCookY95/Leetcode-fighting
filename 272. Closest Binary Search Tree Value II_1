# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def closestKValues(self, root: Optional[TreeNode], target: float, k: int) -> List[int]:
        def inorder(r: TreeNode):
            if not r:
                return
            
            inorder(r.left)
            heappush(heap, (-abs(target - r.val), r.val))
            if len(heap) > k:
                heappop(heap)
            inorder(r.right)
            
        heap = []
        inorder(root)
        return [x for _, x in heap]
