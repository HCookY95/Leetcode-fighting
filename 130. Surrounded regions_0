class Solution:
    def solve(self, board: List[List[str]]) -> None:
        """
        Do not return anything, modify board in-place instead.
        """
        row = len(board)
        col = len(board[0])
        
        def dfs(i, j):
            if (
                i in range(row) and j in range(col) and
                board[i][j] == 'O'
                ):
                board[i][j] = 'E'
                
                dfs(i + 1, j)
                dfs(i - 1, j)
                dfs(i, j + 1)
                dfs(i, j - 1)
                
        for i in range(row):
            dfs(i, 0)
            dfs(i, col - 1)
        
        for j in range(col):
            dfs(0, j)
            dfs(row - 1, j)
            
        for i in range(row):
            for j in range(col):
                if board[i][j] == 'O':
                    board[i][j] = 'X'
                if board[i][j] == 'E':
                    board[i][j] = 'O'
