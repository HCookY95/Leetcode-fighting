class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        from collections import deque
        
        queue = deque()
        visited = set()
        step = 0
        
        queue.append(amount)
        visited.add(amount)
        
        while queue:
            n = len(queue)
            
            for i in range (n):
                tmp = queue.popleft()
                if tmp == 0:
                    return step
                for coin in coins:
                    if tmp - coin >= 0 and tmp - coin not in visited:
                        visited.add(tmp - coin)
                        queue.append(tmp - coin)
            step += 1
        
        return -1
## https://leetcode-cn.com/problems/coin-change/solution/dong-tai-gui-hua-bfs-dfs-by-powcai/
